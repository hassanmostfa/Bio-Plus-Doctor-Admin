import { createApi } from "@reduxjs/toolkit/query/react";
import { baseQueryWithRedirect } from './baseQuery';

// Function to create request
const createRequest = (url) => ({ url });

// Create the API slice using RTK Query
export const apiService = createApi({
  reducerPath: "apiService",
  baseQuery: baseQueryWithRedirect,

  endpoints: (builder) => ({
    // Example login request (modify this as per your API endpoint)
    loginUser: builder.mutation({
      query: (userCredentials) => ({
        url: "/doctor/auth/login",
        method: "POST",
        body: userCredentials, // Sending user credentials (email and password)
      }),
    }),
    getAdmins: builder.query({
      query: () => createRequest("/admin/admin-user"),
    }),
    // You can add more endpoints here as needed
    getUserProfile: builder.query({
      query: (userId) => createRequest(`/admin/admin-user/${userId}`),
    }),
    createUser: builder.mutation({
      query: (user) => ({
        url: "/admin/admin-user",
        method: "POST",
        body: user,
      }),
    }),

    updateUser: builder.mutation({
      query: ({id, user}) => ({
        url: `/admin/admin-user/${id}`,
        method: "PUT",
        body: user,
      }),
    }),

    deleteUser: builder.mutation({
      query: (id) => ({
        url: `/admin/admin-user/${id}`,
        method: "DELETE",
      }),
    })
  }),
});

// Export hooks generated by the API service
export const { useLoginUserMutation, useGetUserProfileQuery, useGetAdminsQuery , useCreateUserMutation, useUpdateUserMutation, useDeleteUserMutation} = apiService;
