import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// Define your base URL
const baseUrl = "https://back.biopluskw.com/api/v1";

// Create the API slice using RTK Query
export const doctorApi = createApi({
  reducerPath: "doctorApi",
  baseQuery: fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers) => {
      // Get the token from localStorage (or Redux state)
      const token = localStorage.getItem("token");

      // If a token exists, add it to the headers
      if (token) {
        headers.set("Authorization", `Bearer ${token}`);
      }

      return headers;
    },
  }),

  endpoints: (builder) => ({
    getDoctors: builder.query({
      query: (params) => ({
        url: '/admin/doctor',
        params: params, // Sends { page: 1, limit: 10 } as query params
      }),
    }),
    
    getDoctor: builder.query({
      query: (id) => `/admin/doctor/${id}`,
    }),
    addDoctor: builder.mutation({
      query: (data) => ({
        url: "/admin/doctor",
        method: "POST",
        body: data,
      }),
    }),
    assignDoctor:builder.mutation({
      query: ({id,data}) => ({
        url:`/admin/doctor/${id}/clinics`,
        method:"POST",
        body:data
      })
    }),
    updateDoctor: builder.mutation({
      query: ({ id, data }) => ({
        url: `/admin/doctor/${id}`,
        method: "PUT",
        body: data,
      }),
    }),
    deleteDoctor: builder.mutation({
      query: (id) => ({
        url: `/admin/doctor/${id}`,
        method: "DELETE",
      }),
    }),
  }),
});

// Export hooks generated by the API service
export const {
  useGetDoctorsQuery,
  useGetDoctorQuery,
  useAddDoctorMutation,
  useAssignDoctorMutation,
  useUpdateDoctorMutation,
  useDeleteDoctorMutation,
} = doctorApi;

